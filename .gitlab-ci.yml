# Tag of TensorFlow base image
# https://pypi.org/project/tensorflow/#history
variables:
  TFTAG: 2.6.0
  TORCHTAG: 1.9.0-cuda11.1-cudnn8-runtime

stages:
  - linting
  - image_build_umamibase
  - unit_test
  - integration_test_preprocessing
  - integration_test_tagger
  - integration_test_plotting
  - coverage_test_stage
  - builds
  - image_build_umami
  - publish
  - pages

linter:
  stage: linting
  image: python:3.7-slim
  script:
    - mkdir coverage_files/
    - pip install flake8
    - flake8 ./umami
  artifacts:
    when: always
    paths:
      - coverage_files/
  rules:
    - if: $CI_COMMIT_BRANCH != ''
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

yaml_linter:
  stage: linting
  image: gitlab-registry.cern.ch/atlas-flavor-tagging-tools/training-images/yamllint:latest
  script:
    - 'yamllint -d "{extends: relaxed, rules: {line-length: disable}}" .'
  rules:
    - if: $CI_COMMIT_BRANCH != ''
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test_coverage:
  stage: coverage_test_stage
  image: python:3.7-slim
  script:
    - pip install --upgrade pip setuptools wheel
    - pip install pytest==6.2.4
    - pip install pytest-cov==2.12.0
    - cd ./coverage_files/
    - coverage combine
    - coverage report
    - coverage xml
    - coverage html
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH=="atlas-flavor-tagging-tools/algorithms/umami"
  artifacts:
    when: always
    paths:
      - coverage_files/
    reports:
      cobertura: coverage_files/coverage.xml
  retry: 2

coverage_html_report:
  stage: builds
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer
  script:
    - deploy-eos
  needs:
    - test_coverage
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PROJECT_PATH=="atlas-flavor-tagging-tools/algorithms/umami"
      variables:
        EOS_PATH: "/eos/user/u/umamibot/www/coverage_reports/master/"
        CI_OUTPUT_DIR: "coverage_files/htmlcov/"
        METHOD: rsync
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH=="atlas-flavor-tagging-tools/algorithms/umami"
      variables:
        EOS_PATH: "/eos/user/u/umamibot/www/coverage_reports/${CI_MERGE_REQUEST_IID}/"
        CI_OUTPUT_DIR: "coverage_files/htmlcov/"
        METHOD: rsync

test_coverage_post_report:
  stage: publish
  image: python:3.7-slim
  needs: ["test_coverage"]
  before_script:
    - pip install --upgrade pip setuptools wheel
    - pip install python-gitlab
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH=="atlas-flavor-tagging-tools/algorithms/umami"
  script:
    - python pipelines/gitlab-mr-coverage-api-post.py

include:
  - 'pipelines/.unit_test-gitlab-ci.yaml'
  - 'pipelines/.docker-gitlab-ci.yaml'
  - 'pipelines/.integration_test-gitlab-ci.yaml'
  - project: 'authoring/documentation/mkdocs-ci'
    file: 'mkdocs-gitlab-pages.gitlab-ci.yml'
