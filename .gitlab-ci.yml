stages:
  - test
  - image_build
  - docs_build
  - publish

variables:
  TFTAG: 2.3.0

unittest:
  stage: test
  image: python:3.7
  script:
    - pip install -r requirements.txt
    - pytest ./umami/tests/ -v

linter:
  stage: test
  image: python:3.7-slim
  allow_failure: true
  script:
    - pip install flake8
    - flake8 ./umami

build_img_gpu:
  stage: image_build
  variables:
    FROM: tensorflow/tensorflow:$TFTAG-gpu
    TO: $CI_REGISTRY_IMAGE:latest-gpu
  script:
    # The script gets overwritten in jobs tagged docker-image-build
    - ignore
  tags:
    - docker-image-build
  only:
    - master

build_img_cpu:
  stage: image_build
  variables:
    FROM: tensorflow/tensorflow:$TFTAG
    TO: $CI_REGISTRY_IMAGE:latest
  script:
    # The script gets overwritten in jobs tagged docker-image-build
    - ignore
  tags:
    - docker-image-build
  only:
    - master


build_img_tag_cpu:
  stage: image_build
  variables:
    FROM: tensorflow/tensorflow:$TFTAG
    TAG: latest
    TO: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  tags:
    - docker-image-build
  script:
    - ignore
  only:
    - tags

build_img_tag_gpu:
  stage: image_build
  variables:
    FROM: tensorflow/tensorflow:$TFTAG-gpu
    TAG: latest
    TO: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-gpu
  tags:
    - docker-image-build
  script:
    - ignore
  only:
    - tags


build_docs:
  stage: docs_build
  image: gitlab-registry.cern.ch/authoring/documentation/mkdocs:stable
  script:
      - mkdocs build --strict --clean --site-dir www
      - echo -e "AddDefaultCharset UTF-8\nSSLRequireSSL\n" > www/.htaccess
  before_script:
  - "" # overwrite default, do nothing
  artifacts:
      paths:
          - www
      expire_in: 1 hour
  only:
    - master

# deploy the website to EOS, but only for master branch of main repository
#     see https://gitlab.cern.ch/ci-tools/ci-web-deployer/
deploying_docs:
  stage: publish
  needs:
    - build_docs
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer
  variables:
    METHOD: xrdcp
    EOS_PATH: "/eos/user/u/umamibot/www"
    CI_OUTPUT_DIR: "www/"
  before_script:
    - "" # overwrite default, do nothing
  script:
    - deploy-eos
  only:
    - master@atlas-flavor-tagging-tools/algorithms/Umami


push_to_hub_cpu:
  stage: publish
  # require: build
  image: matthewfeickert/skopeo-docker:skopeo0.1.42
  variables:
    USER: btagging
    IMAGE: umami
  script:
    - /home/docker/skopeo copy
      --src-creds ${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds ${DH_USERNAME}:${DH_PASSWORD}
      docker://$CI_REGISTRY_IMAGE:latest
      docker://${USER}/${IMAGE}:latest
  only:
    - master


push_to_hub_gpu:
  stage: publish
  # require: build
  image: matthewfeickert/skopeo-docker:skopeo0.1.42
  variables:
    USER: btagging
    IMAGE: umami
  script:
    - /home/docker/skopeo copy
      --src-creds ${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds ${DH_USERNAME}:${DH_PASSWORD}
      docker://$CI_REGISTRY_IMAGE:latest-gpu
      docker://${USER}/${IMAGE}:latest-gpu
  only:
    - master

push_to_hub_tag:
  stage: publish
  image: matthewfeickert/skopeo-docker:skopeo0.1.42
  variables:
    USER: btagging
    IMAGE: umami
  script:
    - /home/docker/skopeo copy
      --src-creds ${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds ${DH_USERNAME}:${DH_PASSWORD}
      docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      docker://${USER}/${IMAGE}:$CI_COMMIT_REF_SLUG
  only:
    - tags

push_to_hub_gpu_tag:
  stage: publish
  image: matthewfeickert/skopeo-docker:skopeo0.1.42
  variables:
    USER: btagging
    IMAGE: umami
  script:
    - /home/docker/skopeo copy
      --src-creds ${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds ${DH_USERNAME}:${DH_PASSWORD}
      docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-gpu
      docker://${USER}/${IMAGE}:$CI_COMMIT_REF_SLUG-gpu
  only:
    - tags
