# Set modelname and path to Pflow preprocessing config file
model_name: CADS_r21
preprocess_config: <path_palce_holder>/umami/examples/PFlow-Preprocessing.yaml

# Add here a pretrained model to start with.
# Leave empty for a fresh start
model_file:

# Add training file
train_file: <path_palce_holder>/PFlow-hybrid-preprocessed_shuffled.h5

# Defining templates for the variable cuts
.variable_cuts_ttbar: &variable_cuts_ttbar
    variable_cuts:
        - pt_btagJes:
            operator: "<="
            condition: 2.5e5

.variable_cuts_zpext: &variable_cuts_zpext
    variable_cuts:
        - pt_btagJes:
            operator: ">"
            condition: 2.5e5

# Add validation files
validation_files:
    ttbar_r21_val:
        path: <path_palce_holder>/MC16d_hybrid_odd_100_PFlow-no_pTcuts-file_0.h5
        label: "$t\\bar{t}$ Release 21"
        <<: *variable_cuts_ttbar

    zprime_r21_val:
        path: <path_palce_holder>/MC16d_hybrid-ext_odd_0_PFlow-no_pTcuts-file_0.h5
        label: "$Z'$ Release 21"
        <<: *variable_cuts_zpext

test_files:
    ttbar_r21:
        path: <path_palce_holder>/MC16d_hybrid_odd_100_PFlow-no_pTcuts-file_1.h5
        <<: *variable_cuts_ttbar

    ttbar_r22:
        path: <path_palce_holder>/MC16d_hybrid-r22_odd_100_PFlow-no_pTcuts-file_1.h5
        <<: *variable_cuts_ttbar

    zpext_r21:
        path: <path_palce_holder>/MC16d_hybrid-ext_odd_0_PFlow-no_pTcuts-file_1.h5
        <<: *variable_cuts_zpext

    zpext_r22:
        path: <path_palce_holder>/MC16d_hybrid-r22-ext_odd_0_PFlow-no_pTcuts-file_1.h5
        <<: *variable_cuts_zpext

# Path to Variable dict used in preprocessing
var_dict: <path_palce_holder>/umami/umami/configs/Dips_Variables.yaml

exclude: null

# Tracks dataset name
tracks_name: "tracks"

# Values for the neural network
NN_structure:
    # Decide, which tagger is used
    tagger: "cads"

    # NN Training parameters
    lr: 0.001
    batch_size: 15000
    epochs: 300

    # Number of jets used for training
    # To use all: Fill nothing
    nJets_train:

    # Dropout rate. If = 0, dropout is disabled
    dropout: 0

    # Define which classes are used for training
    # These are defined in the global_config
    class_labels: ["ujets", "cjets", "bjets"]

    # Main class which is to be tagged
    main_class: "bjets"

    # Decide if Batch Normalisation is used
    Batch_Normalisation: True

    # Structure of the dense layers for each track
    ppm_sizes: [100, 100, 128]

    # Decide, if the pT and eta info is folded into the deep sets input
    ppm_condition: True

    # Structure of the dense layers after summing up the track outputs
    dense_sizes: [100, 100, 100, 30]

    # Decide, if the pT and eta info is folded into the F network input
    dense_condition: False

    # Number of conditions for conditional deep sets
    N_Conditions: 2

    # Decide which pooling should be used
    pooling: "attention"

    # Number of attention nodes
    attention_sizes: [128, 128]

    # Decide, if the pT and eta info is folded into the attention network input
    attention_condition: True

    # Options for the Learning Rate reducer
    LRR: True

    # Option if you want to use sample weights for training
    use_sample_weights: False

# Plotting settings for training metrics plots
Validation_metrics_settings:
    # Define which taggers should also be plotted
    taggers_from_file: ["rnnip", "DL1r"]

    # Label for the freshly trained tagger
    tagger_label: "CADS"

    # Enable/Disable atlas tag
    UseAtlasTag: True

    # fc_value and WP_b are autmoatically added to the plot label
    AtlasTag: "Internal Simulation"
    SecondTag: "\n$\\sqrt{s}=13$ TeV, PFlow jets"

    # Set the datatype of the plots
    plot_datatype: "pdf"

# Eval parameters for validation evaluation while training
Eval_parameters_validation:
    # Number of jets used for validation
    n_jets: 3e5

    # Define taggers that are used for comparison in evaluate_model
    # This can be a list or a string for only one tagger
    tagger: ["rnnip", "DL1r"]

    # Define fc values for the taggers
    frac_values_comp:
        {
            "rnnip": {"cjets": 0.08, "ujets": 0.92},
            "DL1r": {"cjets": 0.018, "ujets": 0.982},
        }

    # Charm fraction value used for evaluation of the trained model
    frac_values: {"cjets": 0.018, "ujets": 0.982}

    # Working point used in the evaluation
    WP: 0.77

    # Decide, if the Saliency maps are calculated or not.
    Calculate_Saliency: False
