# Set modelname and path to Pflow preprocessing config file
model_name: umami_dev
preprocess_config: <path_palce_holder>/PFlow-Preprocessing-DESY.yaml

# Add here a pretrained model to start with.
# Leave empty for a fresh start
model_file:

# Add training file
train_file: <path_palce_holder>/PFlow-hybrid_70-test-preprocessed_shuffled.h5

# Defining templates for the variable cuts
.variable_cuts_ttbar: &variable_cuts_ttbar
    variable_cuts:
        - pt_btagJes:
            operator: "<="
            condition: 2.5e5

.variable_cuts_zpext: &variable_cuts_zpext
    variable_cuts:
        - pt_btagJes:
            operator: ">"
            condition: 2.5e5

# Add validation files
validation_files:
    ttbar_r21_val:
        path: <path_palce_holder>/inclusive_validation_ttbar_PFlow.h5
        label: "$t\\bar{t}$ Release 21"
        <<: *variable_cuts_ttbar

    zprime_r21_val:
        path: <path_palce_holder>/inclusive_validation_zprime_PFlow.h5
        label: "$Z'$ Release 21"
        <<: *variable_cuts_zpext

test_files:
    ttbar_r21:
        path: <path_palce_holder>/inclusive_testing_ttbar_PFlow.h5
        <<: *variable_cuts_ttbar

    ttbar_r22:
        path: <path_palce_holder>/inclusive_testing_ttbar_PFlow_r22.h5
        <<: *variable_cuts_ttbar

    zpext_r21:
        path: <path_palce_holder>/inclusive_testing_zprime_PFlow.h5
        <<: *variable_cuts_zpext

    zpext_r22:
        path: <path_palce_holder>/inclusive_testing_zpext_PFlow_r22.h5
        <<: *variable_cuts_zpext


exclude: null

# Tracks dataset name
tracks_name: "tracks"

# number of files to be loaded in parallel when using TF Records as input files
nfiles: 5

nn_structure:
    # Decide, which tagger is used
    tagger: "umami_cond_att"

    # NN Training parameters
    lr: 0.01
    batch_size: 5000
    epochs: 200

    # Number of jets used for training
    # To use all: Fill nothing
    n_jets_train:

    # Dropout rate for the DIPS block. If = 0, dropout is disabled
    dropout: 0

    # Decide if Batch Normalisation is used in the DIPS block
    batch_normalisation: True

    # Define which classes are used for training
    # These are defined in the global_config
    class_labels: ["ujets", "cjets", "bjets"]

    # Main class which is to be tagged
    main_class: "bjets"

    # DIPS structure
    dips_ppm_units: [100, 100, 128]

    # Decide, if the pT and eta info is folded into the deep sets input
    #ppm_condition: True
    dips_ppm_condition: False

    dips_dense_units: [100, 100, 100, 30]

    # Decide, if the pT and eta info is folded into the F network input
    dense_condition: True

    # These are the layers that will be concatenated with the last layer of dips_dense_units
    intermediate_units: [72]

    # DL1 structure
    dl1_units: [57, 60, 48, 36, 24, 12, 6]

    # Options for the Learning Rate reducer
    lrr: True

    # Option if you want to use sample weights for training
    use_sample_weights: False

    # Number of conditions for conditional deep sets
    n_conditions: 2

    # Decide which pooling should be used
    pooling: "attention"

    # Number of attention nodes
    #attention_sizes: [128, 128]
    attention_units: [128, 128]

    # Decide, if the pT and eta info is folded into the attention network input
    attention_condition: True

    # total loss = loss(umami) + dips_loss_weight * loss(dips)
    dips_loss_weight: 1

# Plotting settings for training metrics plots
validation_settings:
    # Number of jets used for validation
    n_jets: 3e5

    # Define which taggers should also be plotted
    taggers_from_file:
        rnnip: "Recomm. RNNIP"
        DL1r: "Recomm. DL1r"

    # Working point used in the validation
    WP: 0.77

    # fc_value and WP_b are autmoatically added to the plot label
    atlas_first_tag: "Simulation Internal"
    atlas_second_tag: "\n$\\sqrt{s}=13$ TeV, PFlow jets"

    # Set the datatype of the plots
    plot_datatype: "pdf"

evaluation_settings:
    # Number of jets used for evaluation
    n_jets: 3e5

    # Define taggers that are used for comparison in evaluate_model
    # This can be a list or a string for only one tagger
    tagger: ["rnnip", "DL1r"]

    # Define fc values for the taggers
    frac_values_comp: {
        "rnnip": {
            "cjets": 0.07,
            "ujets": 0.93,
        },
        "DL1r": {
            "cjets": 0.018,
            "ujets": 0.982,
        },
    }

    # Charm fraction value used for evaluation of the trained model
    frac_values: {
        "dips": {
            "cjets": 0.018,
            "ujets": 0.982,
        },
        "umami": {
            "cjets": 0.018,
            "ujets": 0.982,
        },
    }

    # Working point used in the evaluation
    WP: 0.77
