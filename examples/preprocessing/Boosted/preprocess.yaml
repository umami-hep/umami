parameters: !include Preprocessing-parameters.yaml
cut_parameters: !include Preprocessing-cut_parameters.yaml

#
#################################
#
#       Baseline parameters
#
##################################

outfile_name: *outfile_name
outfile_name_validation: *outfile_name_validation

plot_name: "Boosted_Higgs"

# Label for the distribution plots of the resampling
plot_sample_label: "$\\sqrt{s}=13$ TeV, Xbb"

# include sample categories in the legends of plots before resampling
legend_sample_category: False

# Variable dict which is used for scaling and shifting
var_file: *var_file

# Dictfile for the scaling and shifting (json)
dict_file: *dict_file

################################
#
#         Preparation
#
################################

preparation:
    # Number of jets loaded per batch from the files for preparation.
    batchsize: 500_000

    # Path to the .h5 files from the h5 dumper.
    ntuples:
        Boosted-Mix:   # supresses sample-category in plot legend
            path: *ntuple_path
            file_pattern: "*.h5/*.h5"

    samples:
        training_hbb:
            type: Boosted-Mix
            category: hbb
            n_jets: 1e9
            <<: *cuts_template_training
            output_name: !join [*sample_path, /hbb_training_Mix.h5]

        training_hcc:
            type: Boosted-Mix
            category: hcc
            n_jets: 1e9
            <<: *cuts_template_training
            output_name: !join [*sample_path, /hcc_training_Mix.h5]

        training_qcd:
            type: Boosted-Mix
            category: qcd
            n_jets: 1e9
            <<: *cuts_template_training
            output_name: !join [*sample_path, /qcd_training_Mix.h5]

        training_top:
            type: Boosted-Mix
            category: top
            n_jets: 1e9
            <<: *cuts_template_training
            output_name: !join [*sample_path, /top_training_Mix.h5]

        ##################

        validation_hbb:
            type: Boosted-Mix
            category: hbb
            n_jets: 1e9
            <<: *cuts_template_validation
            output_name: !join [*sample_path, /hbb_validation_Mix.h5]

        validation_hcc:
            type: Boosted-Mix
            category: hcc
            n_jets: 1e9
            <<: *cuts_template_validation
            output_name: !join [*sample_path, /hcc_validation_Mix.h5]

        validation_qcd:
            type: Boosted-Mix
            category: qcd
            n_jets: 1e9
            <<: *cuts_template_validation
            output_name: !join [*sample_path, /qcd_validation_Mix.h5]

        validation_top:
            type: Boosted-Mix
            category: top
            n_jets: 1e9
            <<: *cuts_template_validation
            output_name: !join [*sample_path, /top_validation_Mix.h5]

        testing:
            type: Boosted-Mix
            category: inclusive
            n_jets: 1e9
            <<: *cuts_template_testing
            output_name: !join [*sample_path, /inclusive_testing_Mix.h5]

################################
#
#        Resampling
#
################################

sampling:
    # Classes which are used in the resampling. Order is important.
    # The order needs to be the same as in the training config!
    class_labels: [hbb, hcc, qcd, top]

    # Decide, which resampling method is used.
    method: count
    # method: importance_no_replace

    # The options depend on the sampling method
    options:
        sampling_variables:
            - pt:
                  # bins take either a list containing the np.linspace arguments
                  # or a list of them
                  # For PDF sampling: must be the np.linspace arguments
                  # and list of list [[]]
                  bins: [2e5, 3e6, 275]
            - abs_eta:
                  bins: [0, 2.5, 20]

        # Decide, which samples are used in the resampling.
        samples_training:
            Boosted-Mix:
                - training_hbb
                - training_hcc
                - training_qcd
                - training_top
        samples_validation:
            Boosted-Mix:
                - validation_hbb
                - validation_hcc
                - validation_qcd
                - validation_top

        custom_n_jets_initial:

        # Fractions of jets in final training set. This needs to add up to one.
        fractions:
            Boosted-Mix: 1.0

        # number of training jets
        # For PDF sampling: the number of target jets per class!
        # So if you set n_jets=1_000_000 and you have 3 output classes
        # you will end up with 3_000_000 jets
        # For other sampling methods: total number of jets after resampling
        # If set to -1: max out to target numbers (limited by fractions ratio)
        n_jets: 200e6

        # number of validation jets in the validation sample
        n_jets_validation: 200e6

        # Bool, if track information (for DIPS etc.) are saved.
        save_tracks: True

        # Name(s) of the track collection(s) to use.
        # tracks_names: ["tracks"]
        tracks_names: ["tracks", "subjets"]

        # Bool, if track labels are processed
        save_track_labels: True

        # this stores the indices per sample into an intermediate file
        intermediate_index_file: *intermediate_index_file

        # this stores the indices per sample for the validation
        intermediate_index_file_validation: *intermediate_index_file_validation

        # for method: weighting
        # relative to which distribution the weights should be calculated
        weighting_target_flavour: 'hbb'

        # If you want to attach weights to the final files
        bool_attach_sample_weights: false

        # How many jets you want to use for the plotting of the results
        # Give null (the yaml None) if you don't want to plot them
        n_jets_to_plot: 20e6

        # # Specify the target distribution
        # target_Mixribution: hbb


################################
#
#      Writing file option
#
################################

# compression for final output files (null/gzip)
compression: null

# save final output files with specified precision
precision: float16

# concatenate jet inputs with each track's inputs in the final output file
concat_jet_tracks: False

# Options for the conversion to tfrecords
convert_to_tfrecord:
    chunk_size: 5000
    N_add_vars: null
