parameters:
  # file path
  file_path: &file_path ./
  ntuple_path: &ntuple_path ./
  sample_path: &sample_path ./


preparation:
  ntuples:
    ttbar:
      path: *ntuple_path
      file_pattern: "*.h5"

  class_labels: [bjets, cjets, ujets]

  samples:
    ttbar:
      type: ttbar
      category: bjets
      n_jets: 1
      cuts:
        - eventNumber:
            operator: mod_2_==
            condition: 0
        - pt_btagJes:
            operator: <=
            condition: 2.5e5
        - pt_btagJes:
            operator: ">"
            condition: 1.5e5
      f_output:
        path: *file_path
        file: dummy.h5
    training_ttbar_bjets:
      type: ttbar
      category: bjets
      n_jets: 10e6
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_ttbar_bjets.h5

    training_ttbar_cjets:
      type: ttbar
      category: cjets
      # Number of c jets available in MC16d
      n_jets: 12745953
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_ttbar_cjets.h5

    training_ttbar_ujets:
      type: ttbar
      category: ujets
      n_jets: 20e6
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_ttbar_ujets.h5

    training_zprime_bjets:
      type: zprime
      category: bjets
      n_jets: 10e6
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_zprime_bjets.h5

    training_zprime_cjets:
      type: zprime
      category: cjets
      # Number of c jets available in MC16d
      n_jets: 10e6
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_zprime_cjets.h5

    training_zprime_ujets:
      type: zprime
      category: ujets
      n_jets: 10e6
      cuts:
      f_output:
        path: *sample_path
        file: dummy-training_zprime_ujets.h5


sampling:
  method: count
  # The options depend on the sampling method
  options:
    sampling_variables:
      - pt_btagJes:
          # bins take either a list containing the np.linspace arguments
          # or a list of them
          bins: [[0, 600000, 351], [650000, 6000000, 84]]
      - absEta_btagJes:
          bins: [0, 2.5, 10]
    samples:
      ttbar:
        - training_ttbar_bjets
        - training_ttbar_cjets
        - training_ttbar_ujets
      zprime:
        - training_zprime_bjets
        - training_zprime_cjets
        - training_zprime_ujets
    fractions:
      ttbar: 0.65
      zprime: 0.35
    # can change after applying resampling in the hybrid sample creation
    save_tracks: False
    tracks_name: "tracks"
    njets: 5.5e6
    intermediate_index_file: indices.h5
    # outputfiles are split into 5
    iterations: 5

outfile_name: dummy_out.h5
plot_name: dummy_plot

var_file: "fixtures/dummy_var_file.yaml"

# Dictfile for the scaling and shifting (json)
dict_file: "test.json"


# cut definitions to be applied to remove outliers
# possible operators: <, ==, >, >=, <=
cuts:
  JetFitterSecondaryVertex_mass:
    operator: <
    condition: 25000
    NaNcheck: True
  JetFitterSecondaryVertex_energy:
    operator: <
    condition: 1e8
    NaNcheck: True
